{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hale\\\\Desktop\\\\WebF\\\\client\\\\src\\\\components\\\\ProfileModal\\\\ProfileModal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Modal, useMantineTheme } from \"@mantine/core\"; // import \"./ProfileModal.css\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { uploadImage } from \"../../actions/UploadAction\";\nimport { updateUser } from \"../../actions/UserAction\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProfileModal(_ref) {\n  _s();\n\n  let {\n    modalOpened,\n    setModalOpened,\n    data\n  } = _ref;\n  const theme = useMantineTheme();\n  const {\n    password,\n    ...other\n  } = data;\n  const [formData, setFormData] = useState(other);\n  const [profileImage, setProfileImage] = useState(null); // const [modalOpened, setModalOpened] = useState(false);\n\n  const [coverImage, setCoverImage] = useState(null);\n  const dispatch = useDispatch();\n  const param = useParams();\n  const {\n    user\n  } = useSelector(state => state.authReducer.authData);\n\n  const handleChange = e => {\n    // for changing each of the <input>s below\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onImageChange = event => {\n    if (event.target.files && event.target.files[0]) {\n      let img = event.target.files[0];\n      event.target.name === \"profileImage\" ? setProfileImage(img) : setCoverImage(img);\n    }\n  };\n\n  const reset = () => {\n    setModalOpened(false);\n    setFormData({ ...formData\n    });\n    setProfileImage(null); // desc.current.value = \"\";\n  }; // form submission: a description of this can be found in PostShare.jsx\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let UserData = formData;\n\n    if (profileImage) {\n      const data = new FormData();\n      const fileName = Date.now() + profileImage.name;\n      data.append(\"name\", fileName);\n      data.append(\"file\", profileImage);\n      UserData.profilePicture = fileName;\n\n      try {\n        dispatch(uploadImage(data));\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    if (coverImage) {\n      const data = new FormData();\n      const fileName = Date.now() + coverImage.name;\n      data.append(\"name\", fileName);\n      data.append(\"file\", coverImage);\n      UserData.coverPicture = fileName;\n\n      try {\n        dispatch(uploadImage(data));\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    dispatch(updateUser(param.id, UserData)); // setModalOpened(true);\n\n    reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    overlayColor: theme.colorScheme === 'dark' ? theme.colors.dark[9] : theme.colors.gray[2],\n    overlayOpacity: 0.55,\n    overlayBlur: 3,\n    size: \"55%\",\n    opened: modalOpened,\n    onClose: () => setModalOpened(false),\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"infoForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"infoInput\",\n          name: \"firstname\",\n          placeholder: \"First Name\",\n          onChange: handleChange,\n          value: formData.firstname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"infoInput\",\n          name: \"lastname\",\n          placeholder: \"Last Name\",\n          onChange: handleChange,\n          value: formData.lastname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"infoInput\",\n          name: \"worksAt\",\n          placeholder: \"Works at\",\n          onChange: handleChange,\n          value: formData.worksAt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"infoInput\",\n          name: \"livesin\",\n          placeholder: \"LIves in\",\n          onChange: handleChange,\n          value: formData.livesin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"infoInput\",\n          name: \"country\",\n          placeholder: \"Country\",\n          onChange: handleChange,\n          value: formData.country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"infoInput\",\n          placeholder: \"RelationShip Status\",\n          name: \"relationship\",\n          onChange: handleChange,\n          value: formData.relationship\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Profile Image\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"profileImage\",\n          onChange: onImageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this), \"Cover Image\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"coverImage\",\n          onChange: onImageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button infoButton\",\n        onClick: handleSubmit,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProfileModal, \"1vonc5QQOp243xpHJ6r200nV4bs=\", false, function () {\n  return [useMantineTheme, useDispatch, useParams, useSelector];\n});\n\n_c = ProfileModal;\nexport default ProfileModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileModal\");","map":{"version":3,"sources":["C:/Users/Hale/Desktop/WebF/client/src/components/ProfileModal/ProfileModal.jsx"],"names":["React","useState","Modal","useMantineTheme","useDispatch","useSelector","useParams","uploadImage","updateUser","ProfileModal","modalOpened","setModalOpened","data","theme","password","other","formData","setFormData","profileImage","setProfileImage","coverImage","setCoverImage","dispatch","param","user","state","authReducer","authData","handleChange","e","target","name","value","onImageChange","event","files","img","reset","handleSubmit","preventDefault","UserData","FormData","fileName","Date","now","append","profilePicture","err","console","log","coverPicture","id","colorScheme","colors","dark","gray","firstname","lastname","worksAt","livesin","country","relationship"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Modal, useMantineTheme } from \"@mantine/core\";\r\n// import \"./ProfileModal.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { uploadImage } from \"../../actions/UploadAction\";\r\nimport { updateUser } from \"../../actions/UserAction\";\r\n\r\nfunction ProfileModal({modalOpened, setModalOpened, data}) {\r\n  const theme = useMantineTheme();\r\n  const { password, ...other } = data;\r\n  const [formData, setFormData] = useState(other);\r\n  const [profileImage, setProfileImage] = useState(null);\r\n  // const [modalOpened, setModalOpened] = useState(false);\r\n  const [coverImage, setCoverImage] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const param = useParams();\r\n\r\n  const { user } = useSelector((state) => state.authReducer.authData);\r\n\r\n  const handleChange = (e) => {\r\n    // for changing each of the <input>s below\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onImageChange = (event) => {\r\n    if (event.target.files && event.target.files[0]) {\r\n      let img = event.target.files[0];\r\n      event.target.name === \"profileImage\"\r\n        ? setProfileImage(img)\r\n        : setCoverImage(img);\r\n    }\r\n  };\r\n  const reset = () => {\r\n    setModalOpened(false);\r\n    setFormData({ ...formData});\r\n    setProfileImage(null);\r\n    // desc.current.value = \"\";\r\n  };\r\n  // form submission: a description of this can be found in PostShare.jsx\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let UserData = formData;\r\n    if (profileImage) {\r\n      const data = new FormData();\r\n      const fileName = Date.now() + profileImage.name;\r\n      data.append(\"name\", fileName);\r\n      data.append(\"file\", profileImage);\r\n      UserData.profilePicture = fileName;\r\n      try {\r\n        dispatch(uploadImage(data));\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n    if (coverImage) {\r\n      const data = new FormData();\r\n      const fileName = Date.now() + coverImage.name;\r\n      data.append(\"name\", fileName);\r\n      data.append(\"file\", coverImage);\r\n      UserData.coverPicture = fileName;\r\n      try {\r\n        dispatch(uploadImage(data));\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n    dispatch(updateUser(param.id, UserData));\r\n    // setModalOpened(true);\r\n    reset();\r\n  };\r\n\r\n\r\n  return (\r\n    <Modal\r\n      overlayColor={theme.colorScheme === 'dark' ? theme.colors.dark[9] : theme.colors.gray[2]}\r\n      overlayOpacity={0.55}\r\n      overlayBlur={3}\r\n      size='55%'\r\n      opened={modalOpened}\r\n      onClose={() => setModalOpened(false)}\r\n    >\r\n      {/* Modal content */}\r\n      <form className='infoForm'>\r\n          <h3>Your info</h3>\r\n          <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"infoInput\"\r\n                    name=\"firstname\"\r\n                    placeholder=\"First Name\"\r\n                    onChange={handleChange}\r\n                    value={formData.firstname}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"infoInput\"\r\n                    name=\"lastname\"\r\n                    placeholder=\"Last Name\"\r\n                    onChange={handleChange}\r\n                    value={formData.lastname}\r\n                  />\r\n          </div>\r\n\r\n          <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"infoInput\"\r\n                    name=\"worksAt\"\r\n                    placeholder=\"Works at\"\r\n                    onChange={handleChange}\r\n                    value={formData.worksAt}\r\n                  />\r\n          </div>\r\n\r\n          <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"infoInput\"\r\n                    name=\"livesin\"\r\n                    placeholder=\"LIves in\"\r\n                    onChange={handleChange}\r\n                    value={formData.livesin}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"infoInput\"\r\n                    name=\"country\"\r\n                    placeholder=\"Country\"\r\n                    onChange={handleChange}\r\n                    value={formData.country}\r\n                  />\r\n            </div>\r\n\r\n            <div>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"infoInput\"\r\n                    placeholder=\"RelationShip Status\"\r\n                    name='relationship'\r\n                    onChange={handleChange}\r\n                    value={formData.relationship}\r\n                  />\r\n            </div>\r\n\r\n            <div>\r\n                    Profile Image\r\n                    <input \r\n                      type=\"file\" name='profileImage'\r\n                      onChange={onImageChange}/>\r\n                    Cover Image\r\n                    <input \r\n                      type=\"file\" \r\n                      name=\"coverImage\" onChange={onImageChange}/>\r\n            </div>\r\n\r\n            <button className=\"button infoButton\"\r\n            onClick={handleSubmit}>Update</button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n}\r\nexport default ProfileModal\r\n"]},"metadata":{},"sourceType":"module"}