{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hale\\\\Desktop\\\\WebF\\\\client\\\\src\\\\components\\\\Posts\\\\Posts.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Posts.css';\nimport Post from '../Post/Post';\nimport { PostsData } from '../../Data/PostsData';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from 'react';\nimport { getTimelinePosts } from '../../actions/postAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Posts = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    user\n  } = useSelector(state => state.authReducer.authData);\n  const {\n    posts,\n    loading\n  } = useSelector(state => state.postReducer); // runs only on the first re-render\n\n  useEffect(() => {\n    dispatch(getTimelinePosts(user._id));\n  }, []); //   return (\n  //     <div className=\"Posts\">\n  //               {PostsData.map((post, id)=>{\n  //                     return <Post data={post} id={id}/>\n  //               })}\n  //     </div>\n  //   )\n  // }\n  // export default Posts\n\n  if (!posts) return 'No Posts';\n  if (params.id) posts = posts.filter(post => post.userId === params.id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Posts\",\n    children: loading ? \"Fetching posts....\" : posts.map((post, id) => {\n      return /*#__PURE__*/_jsxDEV(Post, {\n        data: post\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 20\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Posts, \"feBA6+r/E+j9MxIhqKxwET1QgyY=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["C:/Users/Hale/Desktop/WebF/client/src/components/Posts/Posts.jsx"],"names":["React","Post","PostsData","useSelector","useDispatch","useEffect","getTimelinePosts","Posts","dispatch","user","state","authReducer","authData","posts","loading","postReducer","_id","params","id","filter","post","userId","map"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,SAAQC,SAAR,QAAwB,sBAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAAQC,gBAAR,QAA+B,0BAA/B;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM;AAACK,IAAAA;AAAD,MAAON,WAAW,CAAEO,KAAD,IAASA,KAAK,CAACC,WAAN,CAAkBC,QAA5B,CAAxB;AACA,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAmBX,WAAW,CAAEO,KAAD,IAASA,KAAK,CAACK,WAAhB,CAApC,CAHkB,CAIlB;;AACAV,EAAAA,SAAS,CAAC,MAAI;AACZG,IAAAA,QAAQ,CAACF,gBAAgB,CAACG,IAAI,CAACO,GAAN,CAAjB,CAAR;AACD,GAFQ,EAEP,EAFO,CAAT,CALkB,CAQpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACE,MAAG,CAACH,KAAJ,EAAW,OAAO,UAAP;AACX,MAAGI,MAAM,CAACC,EAAV,EAAcL,KAAK,GAAGA,KAAK,CAACM,MAAN,CAAcC,IAAD,IAASA,IAAI,CAACC,MAAL,KAAcJ,MAAM,CAACC,EAA3C,CAAR;AACd,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,cACGJ,OAAO,GACJ,oBADI,GAEJD,KAAK,CAACS,GAAN,CAAU,CAACF,IAAD,EAAOF,EAAP,KAAc;AACtB,0BAAO,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEE;AAAZ,SAAuBF,EAAvB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD;AAHN;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA7BD;;GAAMX,K;UACaH,W,EACJD,W,EACYA,W;;;KAHrBI,K;AA+BN,eAAeA,KAAf","sourcesContent":["import React from 'react'\r\nimport './Posts.css'\r\nimport Post from '../Post/Post';\r\nimport {PostsData} from '../../Data/PostsData';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useEffect } from 'react';\r\nimport {getTimelinePosts} from '../../actions/postAction';\r\n\r\nconst Posts = () => {\r\n  const dispatch = useDispatch();\r\n  const {user}=useSelector((state)=>state.authReducer.authData);\r\n  const {posts, loading} = useSelector((state)=>state.postReducer);\r\n  // runs only on the first re-render\r\n  useEffect(()=>{\r\n    dispatch(getTimelinePosts(user._id))\r\n  },[])\r\n//   return (\r\n//     <div className=\"Posts\">\r\n//               {PostsData.map((post, id)=>{\r\n//                     return <Post data={post} id={id}/>\r\n//               })}\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default Posts\r\n  if(!posts) return 'No Posts';\r\n  if(params.id) posts = posts.filter((post)=> post.userId===params.id)\r\n  return (\r\n    <div className=\"Posts\">\r\n      {loading\r\n        ? \"Fetching posts....\"\r\n        : posts.map((post, id) => {\r\n            return <Post data={post} key={id} />;\r\n          })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n "]},"metadata":{},"sourceType":"module"}