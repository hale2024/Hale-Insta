{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hale\\\\Desktop\\\\WebF\\\\Hale-Insta\\\\client\\\\src\\\\pages\\\\Auth\\\\Auth.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Auth.css';\nimport Logo from \"../../img/logo.png\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logIn, signUp } from '../../actions/AuthAction'; // we don't need to import our store react-redux will import it for us.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  _s();\n\n  const dispatch = useDispatch(); // authReducer is our combined reducer\n\n  const loading = useSelector(state => state.authReducer.loading);\n  console.log(loading);\n  const initialState = {\n    firstname: \"\",\n    lastname: \"\",\n    username: \"\",\n    password: \"\",\n    confirmpass: \"\"\n  };\n  const [isSignUp, setIsSignUp] = useState(true);\n  const [confirmPass, setConfirmPass] = useState(true);\n  const [data, setData] = useState(initialState); // setting the values of firstname, lasttname, ... for data\n\n  const handleChange = e => {\n    setData({ ...data,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    // e.preventDefault prevents the form from being submitted\n    e.preventDefault();\n\n    if (isSignUp) {\n      data.password === data.confirmpass ? dispatch(signUp(data)) : setConfirmPass(false);\n    } else {\n      dispatch(logIn(data));\n    }\n  };\n\n  const resetForm = () => {\n    setData(initialState);\n    setConfirmPass(confirmPass);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Auth\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"a-left\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: Logo,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Webname\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Hale Media\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"Explore the ideas throughout the world\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"a-right\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"infoForm authForm\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: isSignUp ? \"Sign Up\" : \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 19\n        }, this), isSignUp && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"First Name\",\n            className: \"infoInput\",\n            name: \"firstname\",\n            value: data.firstname,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Last Name\",\n            className: \"infoInput\",\n            name: \"lastname\",\n            value: data.lastname,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Usernames\",\n            className: \"infoInput\",\n            name: \"username\",\n            onChange: handleChange,\n            value: data.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            className: \"infoInput\",\n            name: \"password\",\n            onChange: handleChange,\n            value: data.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 23\n          }, this), isSignUp && /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Confirm Password\",\n            className: \"infoInput\",\n            name: \"confirmpass\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            display: confirmPass ? \"none\" : \"block\",\n            color: 'red',\n            fontSize: '12px',\n            alignSelf: 'flex-end',\n            marginRight: '5px'\n          },\n          children: \"* Confirm Password is not same\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: '12px',\n              cursor: \"pointer\"\n            },\n            onClick: () => {\n              setIsSignUp(prev => !prev);\n              resetForm();\n            },\n            children: isSignUp ? \"Already have an account. Login!\" : \"Don't have an account? Sign Up!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button infoButton\",\n          type: \"submit\",\n          disabled: loading,\n          children: loading ? \"Loading...\" : isSignUp ? \"Sign Up\" : \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Auth, \"nAzEQNtUL/t5YZhT02AnrGx3reg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["C:/Users/Hale/Desktop/WebF/Hale-Insta/client/src/pages/Auth/Auth.jsx"],"names":["React","useState","Logo","useDispatch","useSelector","logIn","signUp","Auth","dispatch","loading","state","authReducer","console","log","initialState","firstname","lastname","username","password","confirmpass","isSignUp","setIsSignUp","confirmPass","setConfirmPass","data","setData","handleChange","e","target","name","value","handleSubmit","preventDefault","resetForm","display","color","fontSize","alignSelf","marginRight","cursor","prev"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport './Auth.css'\r\nimport Logo from \"../../img/logo.png\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { logIn, signUp } from '../../actions/AuthAction';\r\n// we don't need to import our store react-redux will import it for us.\r\n\r\nconst Auth = () => {\r\n  const dispatch = useDispatch();\r\n  // authReducer is our combined reducer\r\n  const loading =useSelector((state)=>state.authReducer.loading);\r\n  console.log(loading)\r\n  const initialState = {\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    username: \"\",\r\n    password: \"\",\r\n    confirmpass: \"\",\r\n  };\r\n  const [isSignUp, setIsSignUp] = useState(true);\r\n  const [confirmPass, setConfirmPass] = useState(true);\r\n  \r\n  const [data, setData] = useState(initialState);\r\n  // setting the values of firstname, lasttname, ... for data\r\n  const handleChange = (e) => {\r\n      setData({ ...data, [e.target.name]: e.target.value });\r\n  };\r\n  const handleSubmit = (e) => {\r\n      // e.preventDefault prevents the form from being submitted\r\n      e.preventDefault();\r\n      if (isSignUp) {\r\n        data.password === data.confirmpass \r\n        ? dispatch(signUp(data)) \r\n        : setConfirmPass(false);\r\n     }else{\r\n        dispatch(logIn(data));\r\n     }\r\n         \r\n  };\r\n  const resetForm = () => {\r\n    setData(initialState);\r\n    setConfirmPass(confirmPass);\r\n  };\r\n  return (\r\n    <div className=\"Auth\">\r\n      {/* Left side with the logo */}\r\n          <div className=\"a-left\">\r\n                <img src={Logo} alt=\"\" />\r\n                <div className=\"Webname\">\r\n                      <h1>Hale Media</h1>\r\n                      <h6>Explore the ideas throughout the world</h6>\r\n                </div>\r\n          </div>\r\n      {/* Right side with the logo  */}\r\n          <div className=\"a-right\">\r\n              \r\n              <form className=\"infoForm authForm\" onSubmit={handleSubmit}>\r\n                  <h3>{isSignUp ? \"Sign Up\" : \"Login\"}</h3>\r\n\r\n                    {isSignUp && \r\n                        <div>\r\n                          <input \r\n                            type=\"text\" \r\n                            placeholder='First Name'\r\n                            className='infoInput' \r\n                            name='firstname'\r\n                            value={data.firstname}\r\n                            onChange={handleChange}/>\r\n                          <input \r\n                            type=\"text\" \r\n                            placeholder='Last Name'\r\n                            className='infoInput' \r\n                            name='lastname'\r\n                            value={data.lastname}\r\n                            onChange={handleChange}/>\r\n                       </div>\r\n                    }\r\n                  \r\n\r\n                  <div>\r\n                      <input type=\"text\" placeholder='Usernames'\r\n                      className='infoInput' name='username'\r\n                      onChange={handleChange}\r\n                      value={data.username}/>\r\n                  </div>\r\n                  \r\n                  <div>\r\n                      <input type=\"password\" placeholder='Password'\r\n                      className='infoInput' name='password'\r\n                      onChange={handleChange}\r\n                      value={data.password}/>\r\n                      {/* confirm password field */}\r\n                      {isSignUp &&\r\n                              <input type=\"password\" placeholder='Confirm Password'\r\n                              className='infoInput' name='confirmpass'\r\n                              onChange={handleChange}/>\r\n                      }\r\n                  </div>\r\n                      {/* we will display the span below if the password and confirm password are different */}\r\n                      <span style={{display: confirmPass? \"none\" : \"block\", color: 'red', fontSize: '12px', alignSelf:'flex-end', marginRight: '5px'}}>\r\n                        * Confirm Password is not same\r\n                      </span>\r\n                    \r\n                  <div>\r\n                      <span style={{fontSize: '12px', cursor: \"pointer\"}} onClick ={()=>{setIsSignUp((prev)=>!prev); resetForm();}}>{isSignUp? \"Already have an account. Login!\" : \"Don't have an account? Sign Up!\"}</span>\r\n                  </div>\r\n                  {/* when we touch the login button the text on it changes to loading */}\r\n\r\n                  <button className=\"button infoButton\" type=\"submit\" disabled={loading}>{loading? \"Loading...\" : isSignUp ? \"Sign Up\" : \"Login\"}</button>\r\n              </form>\r\n            </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Auth\r\n"]},"metadata":{},"sourceType":"module"}