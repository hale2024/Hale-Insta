{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hale\\\\Desktop\\\\WebF\\\\client\\\\src\\\\components\\\\Post\\\\Post.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Post.css';\nimport Comment from '../../img/comment.png';\nimport Share from '../../img/share.png';\nimport Heart from '../../img/like.png';\nimport NotLike from '../../img/notlike.png';\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = _ref => {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const {\n    user\n  } = useSelector(state => state.authReducer.authData); // data.likes.includes(user._id) return a boolean\n\n  const [liked, setLiked] = useState(data.likes.includes(user._id));\n  const [likes, setLikes] = useState(data.likes.length);\n\n  const handleLike = () => {\n    // likePost makes the update on the server\n    likePost(data._id, user._id); // setLiked((prev) => !prev) likes/unlikes the post for us\n\n    setLiked(prev => !prev); // liked? setLikes((prev)=>prev-1): setLikes((prev)=>prev+1)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Post\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: data.image ? process.env.REACT_APP_PUBLIC_FOLDER + data.image : \"\",\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postReact\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: liked ? Heart : NotLike,\n        alt: \"\",\n        style: {\n          cursor: \"pointer\"\n        },\n        onClick: handleLike\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Comment,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Share,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: \"var(--gray)\",\n        fontSize: '12px'\n      },\n      children: [likes, \" likes\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"detail\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: data.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" \", data.desc]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Post, \"daULVJg/xGtqnejGpCVURfI+tKQ=\", false, function () {\n  return [useSelector];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/Hale/Desktop/WebF/client/src/components/Post/Post.jsx"],"names":["React","useState","Comment","Share","Heart","NotLike","useSelector","Post","data","user","state","authReducer","authData","liked","setLiked","likes","includes","_id","setLikes","length","handleLike","likePost","prev","image","process","env","REACT_APP_PUBLIC_FOLDER","cursor","color","fontSize","name","desc"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,YAAP;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AAEA,MAAMC,IAAI,GAAG,QAAY;AAAA;;AAAA,MAAX;AAACC,IAAAA;AAAD,GAAW;AACvB,QAAM;AAAEC,IAAAA;AAAF,MAAWH,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACC,WAAN,CAAkBC,QAA9B,CAA5B,CADuB,CAEvB;;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAACO,IAAI,CAACO,KAAL,CAAWC,QAAX,CAAoBP,IAAI,CAACQ,GAAzB,CAAD,CAAlC;AACA,QAAM,CAACF,KAAD,EAAQG,QAAR,IAAoBjB,QAAQ,CAACO,IAAI,CAACO,KAAL,CAAWI,MAAZ,CAAlC;;AACA,QAAMC,UAAU,GAAG,MAAM;AACvB;AACAC,IAAAA,QAAQ,CAACb,IAAI,CAACS,GAAN,EAAWR,IAAI,CAACQ,GAAhB,CAAR,CAFuB,CAGvB;;AACAH,IAAAA,QAAQ,CAAEQ,IAAD,IAAU,CAACA,IAAZ,CAAR,CAJuB,CAKvB;AACD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BAGM;AAAK,MAAA,GAAG,EAAEd,IAAI,CAACe,KAAL,GAAYC,OAAO,CAACC,GAAR,CAAYC,uBAAZ,GAAsClB,IAAI,CAACe,KAAvD,GAA+D,EAAzE;AAA6E,MAAA,GAAG,EAAC;AAAjF;AAAA;AAAA;AAAA;AAAA,YAHN,eAIM;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAK,QAAA,GAAG,EAAEV,KAAK,GAACT,KAAD,GAAQC,OAAvB;AAAgC,QAAA,GAAG,EAAC,EAApC;AAAuC,QAAA,KAAK,EAAE;AAACsB,UAAAA,MAAM,EAAC;AAAR,SAA9C;AAAkE,QAAA,OAAO,EAAEP;AAA3E;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,GAAG,EAAElB,OAAV;AAAmB,QAAA,GAAG,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAK,QAAA,GAAG,EAAEC,KAAV;AAAiB,QAAA,GAAG,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJN,eASM;AAAM,MAAA,KAAK,EAAE;AAACyB,QAAAA,KAAK,EAAE,aAAR;AAAuBC,QAAAA,QAAQ,EAAE;AAAjC,OAAb;AAAA,iBAAwDd,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA,YATN,eAUM;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACI;AAAA,+BAAM;AAAA,oBAAIP,IAAI,CAACsB;AAAT;AAAA;AAAA;AAAA;AAAA;AAAN;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,wBAAQtB,IAAI,CAACuB,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAVN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA9BD;;GAAMxB,I;UACaD,W;;;KADbC,I;AAgCN,eAAeA,IAAf","sourcesContent":["import React, {useState} from 'react'\r\nimport './Post.css'\r\nimport Comment from '../../img/comment.png'\r\nimport Share from '../../img/share.png'\r\nimport Heart from '../../img/like.png'\r\nimport NotLike from '../../img/notlike.png'\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Post = ({data}) => {\r\n  const { user } = useSelector((state) => state.authReducer.authData);\r\n  // data.likes.includes(user._id) return a boolean\r\n  const [liked, setLiked] = useState(data.likes.includes(user._id));\r\n  const [likes, setLikes] = useState(data.likes.length)\r\n  const handleLike = () => {\r\n    // likePost makes the update on the server\r\n    likePost(data._id, user._id);\r\n    // setLiked((prev) => !prev) likes/unlikes the post for us\r\n    setLiked((prev) => !prev);\r\n    // liked? setLikes((prev)=>prev-1): setLikes((prev)=>prev+1)\r\n  };\r\n\r\n  return (\r\n    <div className=\"Post\">\r\n        {/* data.img stands for the name of the image */}\r\n        {/* accessing image from the server public folder */}\r\n          <img src={data.image? process.env.REACT_APP_PUBLIC_FOLDER + data.image : \"\"} alt=\"\"/>\r\n          <div className=\"postReact\">\r\n              <img src={liked?Heart: NotLike} alt=\"\" style={{cursor:\"pointer\"}} onClick={handleLike}/>\r\n              <img src={Comment} alt=\"\"/>\r\n              <img src={Share} alt=\"\"/>\r\n          </div>\r\n          <span style={{color: \"var(--gray)\", fontSize: '12px'}}>{likes} likes</span>\r\n          <div className=\"detail\">\r\n              <span><b>{data.name}</b></span>\r\n              <span> {data.desc}</span>\r\n          </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post\r\n"]},"metadata":{},"sourceType":"module"}